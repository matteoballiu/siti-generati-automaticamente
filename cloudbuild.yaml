
logsBucket: gs://generatore-siti-build-logs-138602713462/
steps:
  # Step 1: Clonare il repository GitHub (se necessario)
  - name: 'gcr.io/cloud-builders/git'
    id: Clone-Repository
    args:
      - 'clone'
      - '--depth=1'
      - 'https://github.com/matteoballiu/siti-generati-automaticamente'
      - '.'

  # Step 2: Configura l'ambiente Python e installa le dipendenze
  - name: 'python:3.9' # Immagine Python ufficiale da Docker Hub
    id: Install-Dependencies
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          pip install --upgrade pip # Aggiorna pip
          pip install --no-cache-dir -r requirements.txt # Installa dipendenze

  # Step 3: Esegui lo script di generazione sito
  - name: 'gcr.io/cloud-builders/gcloud-slim' # Immagine gcloud-slim che include Python, gcloud, gsutil
    id: Generate-Website
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          # Recupera i segreti da Secret Manager
          export OPENAI_API_KEY=$(gcloud secrets versions access latest --secret=OPENAI_API_KEY --project=${PROJECT_ID})
          export PEXELS_API_KEY=$(gcloud secrets versions access latest --secret=PEXELS_API_KEY --project=${PROJECT_ID})
          export IMAP_USER=$(gcloud secrets versions access latest --secret=IMAP_USER --project=${PROJECT_ID})
          export IMAP_PASSWORD=$(gcloud secrets versions access latest --secret=IMAP_PASSWORD --project=${PROJECT_ID})
          export IMAP_HOST=$(gcloud secrets versions access latest --secret=IMAP_HOST --project=${PROJECT_ID})

          # Definisci PYTHONPATH come variabile d'ambiente
          export PYTHONPATH=/usr/local/lib/python3.9/site-packages:$PYTHONPATH

          # Verifica che le variabili segrete siano state impostate (non stampa i valori)
          echo "Verifica segreti: OPENAI_API_KEY=${OPENAI_API_KEY:+Set}, PEXELS_API_KEY=${PEXELS_API_KEY:+Set}, IMAP_USER=${IMAP_USER:+Set}, IMAP_PASSWORD=${IMAP_PASSWORD:+Set}, IMAP_HOST=${IMAP_HOST:+Set}"
          
          # Esegui il codice
          python3 run_automation.py ./input_email.json
    env:
      - 'PYTHONPATH=/usr/local/lib/python3.9/site-packages' # Aggiungi PYTHONPATH come variabile d'ambiente

  # Step 4: Carica i file generati sul bucket di hosting statico
  - name: 'gcr.io/cloud-builders/gsutil'
    id: Upload-Website
    args: ['-m', 'cp', '-r', './public/*', 'gs://${_HOSTING_BUCKET_NAME}/']

  # Step 5: Pulisci i file JSON di input dal bucket dopo l'elaborazione
  - name: 'gcr.io/cloud-builders/gsutil'
    id: Clean-Input-File
    args: ['rm', 'gs://${_INPUT_BUCKET_NAME}/${_INPUT_FILE_NAME}']
    waitFor: ["Upload-Website"]

timeout: 1800s
