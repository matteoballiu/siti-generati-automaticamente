serviceAccount: projects/generatore-siti-nuovo/serviceAccounts/138602713462@cloudbuild.gserviceaccount.com
logsBucket: gs://generatore-siti-build-logs-138602713462/

substitutions:
  _INPUT_BUCKET_NAME: "generatore-siti-hosting-matteoballiu"
  _INPUT_FILE_NAME: "input_email.json"
  _HOSTING_BUCKET_NAME: "generatore-siti-output"

steps:
# Step 0: Build dell'immagine Docker personalizzata
- name: 'gcr.io/cloud-builders/docker'
  id: Build-Custom-Image
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/custom-python-image', '.']

# Step 1: Esecuzione dello script Python con i segreti e file JSON
- name: 'gcr.io/$PROJECT_ID/custom-python-image'
  id: Generate-Website
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      export OPENAI_API_KEY=$(gcloud secrets versions access latest --secret=OPENAI_API_KEY --project=$PROJECT_ID)
      export PEXELS_API_KEY=$(gcloud secrets versions access latest --secret=PEXELS_API_KEY --project=$PROJECT_ID)
      export IMAP_USER=$(gcloud secrets versions access latest --secret=IMAP_USER --project=$PROJECT_ID)
      export IMAP_PASSWORD=$(gcloud secrets versions access latest --secret=IMAP_PASSWORD --project=$PROJECT_ID)
      export IMAP_HOST=$(gcloud secrets versions access latest --secret=IMAP_HOST --project=$PROJECT_ID)

      gsutil -q cp gs://${_INPUT_BUCKET_NAME}/${_INPUT_FILE_NAME} ./input_email.json || \
      (echo "ERRORE: File di input JSON non trovato nel bucket: gs://${_INPUT_BUCKET_NAME}/${_INPUT_FILE_NAME}" && exit 1)

      echo "Eseguo run_automation.py con input_email.json..."
      python run_automation.py ./input_email.json

# Step 2: Carica i file generati nel bucket di hosting
- name: 'gcr.io/cloud-builders/gsutil'
  id: Upload-Website
  args: ['-m', 'cp', '-r', './public/*', 'gs://${_HOSTING_BUCKET_NAME}/']

# Step 3: Cancella il file di input JSON (opzionale)
- name: 'gcr.io/cloud-builders/gsutil'
  id: Clean-Input-File
  args: ['rm', 'gs://${_INPUT_BUCKET_NAME}/${_INPUT_FILE_NAME}']
  waitFor: ["Upload-Website"]

timeout: 1800s
